apply plugin: 'com.android.application'


android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.roots.app"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
        multiDexEnabled true

//        ndk {
//            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86","arm64-v8a","x86_64"
//        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'me.jessyan:arms:2.5.2'
    implementation 'me.jessyan:arms-imageloader-glide:2.5.2'

    //support
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation(rootProject.ext.dependencies["cardview-v7"]) {
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["constraint"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]

    //view
    implementation rootProject.ext.dependencies["autosize"]
    implementation rootProject.ext.dependencies["flycotablayout"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["magicindicator"]
    implementation rootProject.ext.dependencies["immersionbar"]
    implementation rootProject.ext.dependencies["circleimageview"]
    implementation rootProject.ext.dependencies["ninegridview"]
    implementation rootProject.ext.dependencies["statusbarutil"]
    implementation rootProject.ext.dependencies["dialogs"]
    implementation rootProject.ext.dependencies["xpopup"]

    //tools
    implementation rootProject.ext.dependencies["dagger2"]
    implementation rootProject.ext.dependencies["lombok"]
    implementation rootProject.ext.dependencies["fragmentation"]
    implementation rootProject.ext.dependencies["fragmentation-core"]
    implementation rootProject.ext.dependencies["recyclerviewadapterhelper"]
    implementation rootProject.ext.dependencies["takephoto"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["utilcodex"]
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["citypicker"]
    implementation rootProject.ext.dependencies["citypickerview"]


    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    annotationProcessor rootProject.ext.dependencies["lombok-compiler"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]

    //注意 Arms 核心库现在并不会依赖某个 EventBus, 要想使用 EventBus, 还请在项目中自行依赖对应的 EventBus
    //现在支持两种 EventBus, greenrobot 的 EventBus 和畅销书 《Android源码设计模式解析与实战》的作者 何红辉 所作的 AndroidEventBus
    //依赖后 Arms 会自动检测您依赖的 EventBus 并自动注册
    //建议使用 AndroidEventBus, 特别是组件化项目, 原因请看 https://github.com/hehonghui/AndroidEventBus/issues/49
    //这种做法可以让使用者有自行选择三方库的权利, 并且还可以减轻 Arms 的体积
    implementation rootProject.ext.dependencies["androideventbus"]
//    implementation rootProject.ext.dependencies["eventbus"]

    //test
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["junit"]

    //高德地图
    implementation rootProject.ext.dependencies["navi-3dmap"]
    implementation rootProject.ext.dependencies["location"]
    implementation rootProject.ext.dependencies["search"]

}
